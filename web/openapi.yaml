swagger: "2.0"
info:
  description: "Documentation for genero website"
  version: "1.0.0"
  title: "Genero API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/v1"
tags:
- name: "User"
  description: "Everything about user details"
- name: "Leads"
  description: "APIs for Leads"
- name: "Messages"
  description: "APIs for Messages"
- name: "Notifications"
  description: "APIs for Notifications"
- name: "Payments"
  description: "APIs for payments"
schemes:
- "https"
- "http"
paths:
  /auth/standard:
    post:
      tags:
      - "User"
      summary: "Login user using normal means"
      description: ""
      operationId: "authStandard"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credentials of user"
        required: true
        schema:
          $ref: "#/definitions/request_login"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/auth_response"
        "403":
          description: "Invalid username or password"
  /auth/google:
    post:
      tags:
      - "User"
      summary: "Login user using google account"
      description: ""
      operationId: "authGoogle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credentials of user"
        required: true
        schema:
          $ref: "#/definitions/request_login_google"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/auth_response"
        "403":
          description: "Invalid username or password"
  /auth/fb:
    post:
      tags:
      - "User"
      summary: "Login user using fb account"
      description: ""
      operationId: "authFB"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credentials of user"
        required: true
        schema:
          $ref: "#/definitions/request_login_fb"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/auth_response"
        "403":
          description: "Invalid username or password"
  /message-details:
    get:
      tags:
      - "Messages"
      summary: "Get message"
      description: ""
      operationId: "getMessage"
      produces:
      - "application/json"
      parameters:
          - name: user_id
            in: query
            description: User ID input(MongoDB Object)
            required: true
            type: "string"
          - name: message_id
            in: query
            description: Message ID input(MongoDB Object)
            required: true
            type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/message_response"
        "400":
          description: "Invalid input"
  /messages:
    post:
      tags:
      - "Messages"
      summary: "Get messages"
      description: ""
      operationId: "getMessages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch analytics"
        required: true
        schema:
          $ref: "#/definitions/request_messages"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/messages_response"
        "400":
          description: "Invalid input"
  /send-message:
    post:
      tags:
      - "Messages"
      summary: "Send messages"
      description: ""
      operationId: "sendMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch analytics"
        required: true
        schema:
          $ref: "#/definitions/request_send_message"
      responses:
        "200":
          description: "Create message response"
          schema:
            $ref: "#/definitions/message_response"
        "400":
          description: "Invalid input"
  /notifications:
    post:
      tags:
      - "Notifications"
      summary: "Get Notifications"
      description: ""
      operationId: "getNotifications"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch notifications"
        required: true
        schema:
          $ref: "#/definitions/request_messages"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Notifications"
        "400":
          description: "Invalid input"
  /notification:
    delete:
      tags:
      - "Notifications"
      summary: "Remove a Notification"
      description: ""
      operationId: "removeNotification"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Remove notification"
        required: true
        schema:
          type: "object"
          properties:
            user_id:
              type: "string"
            notification_id:
              type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Notifications"
        "400":
          description: "Invalid input"
  /events/{user_id}:
    get:
      tags:
          - "User"
      summary: "Get event trail by user_id"
      operationId: getEvents
      parameters:
        - name: user_id
          in: path
          description: "Get event trail by user_id"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
              event:
                type: "array"
                items:
                  $ref: "#/definitions/Event"
        "403":
          description: "Invalid input"
  /leads:
    get:
      tags:
      - "Leads"
      summary: "Get leads"
      description: ""
      operationId: "getLeads"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch leads"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Lead"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
  /lead/{id}:
    get:
      tags:
          - "Leads"
      summary: "Get lead detail by id"
      operationId: getLead
      parameters:
        - name: id
          in: path
          description: "Get lead detail by id"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
              lead:
                type: "object"
                $ref: "#/definitions/Lead"
        "403":
          description: "Invalid input"
  /send-lead:
    post:
      tags:
      - "Leads"
      summary: "Send lead"
      description: ""
      operationId: "sendLead"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credentials of user"
        required: true
        schema:
          $ref: "#/definitions/request_send_lead"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/send_lead_response"
        "403":
          description: "Invalid input"
  /heroes:
    get:
      tags:
      - "Leads"
      summary: "Get top heroes"
      description: ""
      operationId: "getHeroes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch heroes"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
  /new-hero:
    post:
      tags:
      - "Leads"
      summary: "Add new hero"
      description: ""
      operationId: "newHero"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add hero"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
  /balance:
    post:
      tags:
      - "Payments"
      summary: "Get balance"
      description: ""
      operationId: "getBalance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch events"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
  /method:
    get:
      tags:
      - "Payments"
      summary: "Get payment method"
      description: ""
      operationId: "getMethod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch payment method"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
    put:
      tags:
      - "Payments"
      summary: "Change payment method"
      description: ""
      operationId: "updateMethod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch events"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
  /payments:
    post:
      tags:
      - "Payments"
      summary: "Get payments"
      description: ""
      operationId: "getPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch payment method"
        required: true
        schema:
          $ref: "#/definitions/request_payment"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/payment_response"
        "400":
          description: "Invalid input"
  /analytics:
    post:
      tags:
      - "Payments"
      summary: "Get analytics"
      description: ""
      operationId: "getAnalytics"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch analytics"
        required: true
        schema:
          $ref: "#/definitions/request_analytics"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/analytics_response"
        "400":
          description: "Invalid input"
  /earnings:
    get:
      tags:
      - "Payments"
      summary: "Get earnings"
      description: ""
      operationId: "getEarnings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch events"
        required: true
        schema:
          $ref: "#/definitions/Holder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
        "403":
          description: "Invalid input"
definitions:
  User:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"
      phone:
        type: "string"
      google_id:
        type: "string"
      fb_id:
        type: "string"
      type_id:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Payments:
    type: "object"
    properties:
      payment_id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
        format: "int64"
      payment_type:
        type: "string"
      title:
        type: "string"
      processing_date:
        type: "string"
    xml:
      name: "Payments"
  Messages:
    type: "object"
    properties:
      user_id:
        type: "string"
      sender_id:
        type: "string"
      sender_name:
        type: "string"
      title:
        type: "string"
      message:
        type: "string"
      message_datetime:
        type: "string"
    xml:
      name: "Messages"
  Notifications:
    type: "object"
    properties:
      user_id:
        type: "string"
      notification_data:
        type: "array"
        items:
            type: "object"
            properties:
              notif_type:
                type: "string"
              description:
                type: "string"
              data_url:
                type: "string"
              web_url:
                type: "string"
            
    xml:
      name: "Messages"
  Lead:
    type: "object"
    properties:
      sender_id:
        type: "string"
      client_name:
        type: "string"
      phone_number:
        type: "string"
      email:
        type: "string"
      address:
        type: "string"
      insurance_type:
        type: "string"
      contact_form:
        type: "string"
      other_notes:
        type: "string"
      driver_dobs:
        type: "string"
      car_details:
        type: "string"
      liability_details:
        type: "string"
    xml:
      name: "Lead"
  Hero:
    type: "object"
    properties:
      routine:
        type: "array"
        items:
          type: "string"
      ref_id:
        type: "string"
    xml:
      name: "Lead"
  Event:
    type: "object"
    properties:
      initiator_user:
        type: "string"
      target_user:
        type: "string"
      transaction_type:
        type: "string"
      title:
        type: "string"
      contents:
        type: "string"
      details_url:
        type: "string"
    xml:
      name: "Holder"
  Holder:
    type: "object"
    properties:
      holder:
        type: "string"
    xml:
      name: "Holder"
  request_login:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  request_login_fb:
    type: "object"
    properties:
      id:
        type: "string"
    xml:
      name: "User"
  request_login_google:
    type: "object"
    properties:
      token:
        type: "string"
    xml:
      name: "User"
  request_payment:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
    xml:
      name: "request_payment"
  request_analytics:
    type: "object"
    properties:
      user_id:
        type: "integer"
      group_by:
        type: "string"
      start:
        type: "string"
      end:
        type: "string"
    xml:
      name: "request_analytics"
  request_send_message:
    type: "object"
    $ref: "#/definitions/Messages"
    xml:
      name: "request_messages"
  request_messages:
    type: "object"
    properties:
      user_id:
        type: "string"
    xml:
      name: "request_messages"
  request_send_lead:
    type: "object"
    properties:
      schema:
        $ref: "#/definitions/Lead"
    xml:
      name: "request_lead"
  auth_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      token:
        type: "string"
      type:
        type: "string"
      auth_type:
        type: "string"
  payment_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      payment:
        type: "array"
        items:
          type: "object"
          properties: 
            schema:
              $ref: "#/definitions/Payments"
  analytics_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      payment:
        type: "array"
        items:
          type: "object"
          properties: 
            date:
              type: "object"
              properties: 
                month:
                  type: "integer"
                year:
                  type: "integer"
            total:
              type: "integer"
  send_lead_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      lead:
        type: "object"
        properties:
          schema:
            $ref: "#/definitions/Lead"
  messages_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/Messages"
  message_response:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "object"
        $ref: "#/definitions/Messages"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
